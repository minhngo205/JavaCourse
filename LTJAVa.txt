23/9/2020
coi lại biên dịch thông dịch java
static  : cấp phát vùng nhớ 1 lần (biến dùng chung) tiết kiệm
private : chỉ thành viên trong lớp đc dùng
default (không ghi gì): dùng đc trong lớp và package
protected   : trong lớp, trong package, ngoài package mang tính kế thừa được dùng
public      : chỗ nào cũng dùng đc


30/9/2020
Overload (nạp chồng): Cùng trong 1 lớp, cùng tên, khác nhau danh sách tham số
Overriding (Ghi đè) : Có mặt trong lớp cha cũng như kế thừa, được định nghĩa lại trong lớp kế thừa
*dẫn xuất*
*static(tĩnh): biến, phương thức, khối lệnh, lớp
- dùng để quản lý bộ nhớ
- thuộc về lớp chứ ko thuộc về instance (thể hiện) của lớp (không cần tạo đối tượng để chạy phương thức static)
Biến static:
    + biến tĩnh
    + sử dụng để tham chiếu thuộc tính chung của tất cả đối tượng
    + VD: tên công ty, têm trg
    + cấp phát vùng nhớ 1 lần
    + không cần đưa vào hàm dựng
Phương thức static:
    + phương thức thuộc lớp chứ ko phải đối tượng của lớp
    + không cần tạo instance của lớp
    + phương thức static có thể truy cập biến static và thay đổi giá trị của biến static
    + phương thức static không được phép truy cập tới biến non-static
    + phương thức non-static thì có thể truy cập biến static
    + phương thức main bắt buộc phải là static vì ctr chạy từ main
    + 'this' và 'super' không thể được sử dụng trong ngữ cảnh static
Khối lệnh static:
Cú pháp:
    static {
        -
        -
        -
    }
    + tạo thành viên static
    + chạy trước main 


7/10/2020:
if/if...else
switch case (có break và ko có break)
do...while: làm trước mới kiểm tra (ít nhất 1 lệnh được làm)
break continue

14/10/2020: package & interfaces
Trong 1 package chưa nhiều lớp
Phương thức trừu tượng : chỉ có phần khai báo
Lớp trừu tượng: chứa phương thức trừu tượng
Interface: lớp trừu tượng thuần túy (chỉ chứa phương thức trừu tượng)
Vd: int là kiểu dữ liệu còn Integer là lớp
Lớp StringTokenizer: xử lý chuỗi
Tách chuỗi ban đầu thành nhiều chuỗi con
Exception
Tránh chương trình dừng 1 cách đột ngột
Lớp throwable mà Java cung cấp là lớp trên nhất của lớp biệt lệ
Mô hình xử lý biệt lệ:
try
catch
throw
throws
finally
Cú pháp:
try(...)
catch(Exception e1) {...}
catch(Exception e2) {...}
catch(Exception eN) {...}
finally {...} //dọn dẹp và thu hồi vùng nhớ, đóng file, CSDL an toàn

AWT+Swing
Frames - Panels
Nút Radio (chỉ chọn được 1): tạo đối tượng CheckBoxGroup

21/10/2020
*Layout*
Flow Layout: bố trí từ góc trên bên trái canh giữa
Border Layout: Đông-Tây-Nam-Bắc-Trung tâm
Card Layout: thẻ bài, áp dụng cho panel
Grid Layout: ô lưới hcn (dòng-cột) - mỗi đối tượng 1 ô
GridBag Layout: giống Grid nhưng 1 đối tượng có thể chiếm nhiều ô
muốn dùng thì setLayout();
*Xử lý sự kiện*
4 bước cơ bản:
- Cài đặt lắng nghe (Listener) tương ứng
- Nhận diện tất cả các thành phần tạo sự kiện
- Nhận diện các sự kiện đc xử lý
- Cài đặt các phương thức Listener tương ứng

4/11/2020: Lập trình các luồng vào ra 
*Luồng hướng Byte: 1 kí tự ~ 8 bit 
+Input Stream/Output Stream
*Luồng hướng char(ký tự): 1 kí tự ~ 16 bit
+Reader/Writer
DataInputStream/DataOutputStream
Từ System.in -> Tạo đường ống vào LV -> Tạo vùng đẹm BR -> đọc cho các biến chương trình
